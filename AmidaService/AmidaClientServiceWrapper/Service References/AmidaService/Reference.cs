//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.239
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace AmidaClientServiceWrapper.AmidaService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AmidaService.IAmidaService", CallbackContract=typeof(AmidaClientServiceWrapper.AmidaService.IAmidaServiceCallback))]
    public interface IAmidaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmidaService/GetData", ReplyAction="http://tempuri.org/IAmidaService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmidaService/InsertIntoVerifyNote", ReplyAction="http://tempuri.org/IAmidaService/InsertIntoVerifyNoteResponse")]
        void InsertIntoVerifyNote(AmidaClientService.AmidaService.VerifyNoteData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmidaService/Register", ReplyAction="http://tempuri.org/IAmidaService/RegisterResponse")]
        void Register(string key, string DeviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmidaService/SayServerHello", ReplyAction="http://tempuri.org/IAmidaService/SayServerHelloResponse")]
        void SayServerHello();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmidaService/GetAllConnectionInfo", ReplyAction="http://tempuri.org/IAmidaService/GetAllConnectionInfoResponse")]
        AmidaClientService.AmidaService.RegisterDeviceInfo[] GetAllConnectionInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmidaService/ExportCommand", ReplyAction="http://tempuri.org/IAmidaService/ExportCommandResponse")]
        void ExportCommand(string CmdType, string xml);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAmidaServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAmidaService/ReceivedCommand")]
        void ReceivedCommand(string xmlCmd, AmidaClientService.AmidaService.InportCmdType cmdType, string LeadingFileName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAmidaService/SayHello")]
        void SayHello(string hello);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAmidaService/NotifyConnectionChanged")]
        void NotifyConnectionChanged();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAmidaServiceChannel : AmidaClientServiceWrapper.AmidaService.IAmidaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AmidaServiceClient : System.ServiceModel.DuplexClientBase<AmidaClientServiceWrapper.AmidaService.IAmidaService>, AmidaClientServiceWrapper.AmidaService.IAmidaService {
        
        public AmidaServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AmidaServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AmidaServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AmidaServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AmidaServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public void InsertIntoVerifyNote(AmidaClientService.AmidaService.VerifyNoteData data) {
            base.Channel.InsertIntoVerifyNote(data);
        }
        
        public void Register(string key, string DeviceType) {
            base.Channel.Register(key, DeviceType);
        }
        
        public void SayServerHello() {
            base.Channel.SayServerHello();
        }
        
        public AmidaClientService.AmidaService.RegisterDeviceInfo[] GetAllConnectionInfo() {
            return base.Channel.GetAllConnectionInfo();
        }
        
        public void ExportCommand(string CmdType, string xml) {
            base.Channel.ExportCommand(CmdType, xml);
        }
    }
}
