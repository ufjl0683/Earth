<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
   
    xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit" 
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:local="clr-namespace:slAmidaConsole"
    xmlns:ee="http://schemas.microsoft.com/expression/2010/effects" 
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:ctl="clr-namespace:System.Windows;assembly=System.Windows.Controls"
    x:Class="slAmidaConsole.MainPage"
    mc:Ignorable="d"
    d:DesignHeight="381" d:DesignWidth="1024" Loaded="UserControl_Loaded" xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk">
	<UserControl.Resources>
        <local:RemainTimeConverter x:Key="RemainTimeConverter" />
        <local:StandardTimeConveter x:Key="StandardTimeConveter" />
        <local:ZeroToNAConverter x:Key="ZeroToNAConverter" />
        <local:YieldToStringConverter x:Key="YieldToStringConverter" />
        <local:PendingVisibleConverter x:Key="PendingVisibleConverter" />
        <Style x:Key="ProgressBarStyle1" TargetType="ProgressBar">
            <Setter Property="Foreground" Value="#FF027DB8"/>
            <Setter Property="Background" Value="#FFD2D5D8"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Maximum" Value="100"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
                        <GradientStop Color="#FFAEB7BF" Offset="0"/>
                        <GradientStop Color="#FF919EA7" Offset="0.35"/>
                        <GradientStop Color="#FF7A8A99" Offset="0.35"/>
                        <GradientStop Color="#FF647480" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Grid x:Name="Root">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation Duration="00:00:.5" From="0" To="20" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X" Storyboard.TargetName="IndeterminateGradientFill"/>
                                            <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="IndeterminateRoot">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DeterminateRoot">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="ProgressBarTrack" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                            <Grid x:Name="ProgressBarRootGrid">
                                <Rectangle x:Name="ProgressBarRootGradient" Margin="{TemplateBinding BorderThickness}" RadiusY="1.5" RadiusX="1.5" Stroke="#FFFFFFFF" StrokeThickness="1" Canvas.ZIndex="1" d:IsHidden="True" Visibility="Collapsed">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                            <GradientStop Color="#B2FFFFFF" Offset="0"/>
                                            <GradientStop Color="#C6FFFFFF" Offset="0.15"/>
                                            <GradientStop Color="#D1FFFFFF" Offset="0.275"/>
                                            <GradientStop Color="#C6FFFFFF" Offset="0.4"/>
                                            <GradientStop Color="#BFFFFFFF" Offset="0.65"/>
                                            <GradientStop Color="#A5FFFFFF" Offset="0.75"/>
                                            <GradientStop Color="#91FFFFFF" Offset="0.85"/>
                                            <GradientStop Color="#72FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
                                    <Rectangle x:Name="IndeterminateSolidFill" Fill="{TemplateBinding Foreground}" Margin="{TemplateBinding BorderThickness}" Opacity="1" RadiusY="2" RadiusX="2" RenderTransformOrigin="0.5,0.5" Stroke="#FF448DCA" StrokeThickness="0"/>
                                    <Rectangle x:Name="IndeterminateGradientFill" Margin="{TemplateBinding BorderThickness}" Opacity="0.7" RadiusY="2" RadiusX="2" StrokeThickness="1">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0,1" MappingMode="Absolute" SpreadMethod="Repeat" StartPoint="20,1">
                                                <LinearGradientBrush.Transform>
                                                    <TransformGroup>
                                                        <TranslateTransform X="0"/>
                                                        <SkewTransform AngleX="-30"/>
                                                    </TransformGroup>
                                                </LinearGradientBrush.Transform>
                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                <GradientStop Color="#00FFFFFF" Offset=".25"/>
                                                <GradientStop Color="#FFFFFFFF" Offset="0.85"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>
                                <Grid x:Name="DeterminateRoot" Margin="1">
                                    <Rectangle x:Name="ProgressBarIndicator" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="{TemplateBinding BorderThickness}" RadiusY="1.5" RadiusX="1.5" StrokeThickness="0.5"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="NormalPanelTemplate">
            <toolkit:WrapPanel  Width="800" Height="Auto" Loaded="WrapPanel_Loaded" SizeChanged="WrapPanel_SizeChanged" >
                <i:Interaction.Behaviors>
                    <ei:FluidMoveBehavior AppliesTo="Children">
                        <ei:FluidMoveBehavior.EaseX>
                            <QuadraticEase EasingMode="EaseOut"/>
                        </ei:FluidMoveBehavior.EaseX>
                        <ei:FluidMoveBehavior.EaseY>
                            <QuarticEase EasingMode="EaseOut"/>
                        </ei:FluidMoveBehavior.EaseY>
                    </ei:FluidMoveBehavior>
                </i:Interaction.Behaviors>
            </toolkit:WrapPanel>
        </ItemsPanelTemplate>
       
        <DataTemplate x:Key="NormalDataTemplate">
            <Border Height="128" Width="160" BorderBrush="#FFE51212" BorderThickness="2" CornerRadius="5" Background="{Binding YieldColor}"  >
                <!--<toolkit:ContextMenuService.ContextMenu>
                    <toolkit:ContextMenu>
                        
                    </toolkit:ContextMenu>
                </toolkit:ContextMenuService.ContextMenu>-->
              
        		<Grid x:Name="Grid" Loaded="Grid_Loaded"  Unloaded="Grid_Unloaded" >
                   
                    <Grid.Resources>
        				<Storyboard x:Name="Storyboard1">
        					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="wafer">
        						<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        						<EasingDoubleKeyFrame KeyTime="0:0:1" Value="360"/>
        					</DoubleAnimationUsingKeyFrames>
        				</Storyboard>
        				<!--<Storyboard x:Name="Storyboard2">
                				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="wafer">
                					<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                					<EasingDoubleKeyFrame KeyTime="0:0:1" Value="360"/>
                				</DoubleAnimationUsingKeyFrames>
                			</Storyboard>-->
        			</Grid.Resources>
        			<ProgressBar x:Name="ProgressBar" Margin="0,85.5,-77.073,32.583" RenderTransformOrigin="0,0.536" HorizontalAlignment="Right" UseLayoutRounding="False" Width="85.073" d:LayoutRounding="Auto" Value="{Binding Progress}"  Style="{StaticResource ProgressBarStyle1}" BorderThickness="1"  >
        				<ToolTipService.ToolTip>
        					<TextBlock Text="{Binding Progress,StringFormat=\{0:0.00\}}" />
        				</ToolTipService.ToolTip>
        				<ProgressBar.Foreground>
        					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        						<GradientStop Color="Black" Offset="0"/>
        						<GradientStop Color="Black" Offset="1"/>
        						<GradientStop Color="#FFF90404" Offset="0.539"/>
        					</LinearGradientBrush>
        				</ProgressBar.Foreground>
        				<ProgressBar.RenderTransform>
        					<CompositeTransform Rotation="-90"  />
        				</ProgressBar.RenderTransform>
        			</ProgressBar>
        			<TextBlock x:Name="txtStatusContinueTime" Margin="0,108,20,0" TextWrapping="Wrap" Text="{Binding StatusContinueTime}" Height="16" VerticalAlignment="Top" Foreground="#FFF7F4F4" HorizontalAlignment="Right" Width="77" TextAlignment="Right"  >
        				<TextBlock.Projection>
        					<PlaneProjection/>
        				</TextBlock.Projection>
        			</TextBlock>
        			<TextBlock x:Name="txtRemainTime" Height="16" Margin="4,108,0,0" TextWrapping="Wrap" Text="{Binding TimeRemain, Converter={StaticResource RemainTimeConverter}}" VerticalAlignment="Top" Foreground="#FFF7F4F4" HorizontalAlignment="Left" Width="75" TextAlignment="Left" ToolTipService.ToolTip="remaining time"/>
        			<local:Wafer x:Name="wafer" RenderTransformOrigin="0.5,0.5" Width="122" Height="112" VerticalAlignment="Top" Margin="-24,0,0,0" Loaded="wafer_Loaded" HorizontalAlignment="Left"  >
        				<local:Wafer.Projection>
        					<PlaneProjection/>
        				</local:Wafer.Projection>


        			</local:Wafer>
                    <TextBlock x:Name="txtEqid" Height="16" TextWrapping="Wrap" Foreground="Brown"  Text="{Binding PcName}" VerticalAlignment="Top" HorizontalAlignment="Left" Width="144" d:LayoutOverrides="VerticalAlignment" RenderTransformOrigin="0.457,0.364" FontSize="12" FontWeight="Bold" TextAlignment="Center"/>
                    <TextBlock x:Name="txtRemainTime_Copy" Height="16" Margin="4,91,0,0" TextWrapping="Wrap" Text="{Binding lot_id}" VerticalAlignment="Top" Foreground="#FFF7F4F4" TextAlignment="Center" ToolTipService.ToolTip="lot_id"   />
                    <TextBlock HorizontalAlignment="Right" Height="16" Margin="0,20,16,0" TextWrapping="Wrap" Text="{Binding eq_area}" VerticalAlignment="Top" Width="64" Foreground="#FFF7F4F4" ToolTipService.ToolTip="eq_area"   />
                    <TextBlock HorizontalAlignment="Right" Height="16" Margin="0,38,16,0" TextWrapping="Wrap" Text="{Binding eq_type}" VerticalAlignment="Top" Width="64" Foreground="#FFF7F4F4" ToolTipService.ToolTip="eq_type"  />
                    <TextBlock HorizontalAlignment="Right" Margin="0,56,16,0" TextWrapping="Wrap" Text="{Binding eq_prober}" Width="64" Foreground="#FFF7F4F4" Height="16" VerticalAlignment="Top" ToolTipService.ToolTip="eq_prober"   />
                    <TextBlock HorizontalAlignment="Left"  Height="34" Margin="46,20,0,0" TextWrapping="Wrap" Text="P" Visibility="{Binding IsExportPending,Converter={StaticResource PendingVisibleConverter } }" VerticalAlignment="Top" Width="26" FontSize="24" FontWeight="Black" Foreground="#FFE713F3"/>
                   
                    <!--<TextBlock HorizontalAlignment="Right" Margin="0,72,16,0" TextWrapping="Wrap" Text="{Binding yield,Converter={StaticResource YieldToStringConverter}}" Width="64" Foreground="{Binding YieldColor}" Height="16" VerticalAlignment="Top" ToolTipService.ToolTip="yield"  />-->
        		</Grid>
        	</Border>
            <!--<StackPanel Orientation="Vertical"  Loaded="StackPanel_Loaded" Unloaded="StackPanel_Unloaded"  >
                    	<StackPanel.Resources>
                    		<Storyboard x:Name="Storyboard1">
                    			<DoubleAnimation Duration="0:0:1" From="0" To="360" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="image" d:IsOptimized="True"/>
                    		</Storyboard>
                    	</StackPanel.Resources>
                        <ToolTipService.ToolTip>
                            <StackPanel>
                                <TextBlock Text="{Binding ConnectedTime}"/>
                                <TextBlock Text="{Binding DeviceType}" />
                            </StackPanel>
                        </ToolTipService.ToolTip>
                        <Image x:Name="image" Source="{Binding DeviceType, StringFormat=/\{0\}.png}" Width="48" Height="48">
                        	<Image.Projection>
                        		<PlaneProjection/>
                        	</Image.Projection>
                        </Image>
                        <TextBlock Text="{Binding PcName}" Margin="3"  TextAlignment="Center" Width="80" />
                          
                         <TextBlock Text="{Binding ConnectedTime}" Margin="3" Width="300" />
                    </StackPanel>-->
        </DataTemplate>
        <!--<DataTemplate x:Key="DetailDataTemplate">
            <StackPanel Orientation="Horizontal"   >
                <TextBlock Text="{Binding PcName }" FontSize="14" Margin="5,5,5,5" />
                <TextBlock Text="{Binding Status }" FontSize="14" Margin="5,5,5,5" />
                <TextBlock Text="{Binding TimeRemain,Converter={StaticResource RemainTimeConverter}}" FontSize="14" Margin="5,5,5,5" />
                <TextBlock   Text="{Binding StatusContinueTime}"  FontSize="14" Margin="5,5,5,5" />
                <TextBlock   Text="{Binding Progress,StringFormat=\{0\}%}"  FontSize="14" Margin="5,5,5,5" />
            </StackPanel>
        </DataTemplate>-->
     
		<ControlTemplate x:Key="ValidationToolTipTemplate">
			<Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
				<Grid.RenderTransform>
					<TranslateTransform x:Name="xform" X="-25"/>
				</Grid.RenderTransform>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="OpenStates">
						<VisualStateGroup.Transitions>
							<VisualTransition GeneratedDuration="0"/>
							<VisualTransition GeneratedDuration="0:0:0.2" To="Open">
								<Storyboard>
									<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
										<DoubleAnimation.EasingFunction>
											<BackEase Amplitude=".3" EasingMode="EaseOut"/>
										</DoubleAnimation.EasingFunction>
									</DoubleAnimation>
									<DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
								</Storyboard>
							</VisualTransition>
						</VisualStateGroup.Transitions>
						<VisualState x:Name="Closed">
							<Storyboard>
								<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Open">
							<Storyboard>
								<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
								<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
				<Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
				<Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
				<Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
				<Border Background="#FFDC000C" CornerRadius="2"/>
				<Border CornerRadius="2">
					<TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
				</Border>
			</Grid>
		</ControlTemplate>
		<Style x:Key="RadioButtonStyle1" TargetType="RadioButton">
			<Setter Property="Background" Value="#FF448DCA"/>
			<Setter Property="Foreground" Value="#FF000000"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="Padding" Value="4,1,0,0"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#FFA3AEB9" Offset="0"/>
						<GradientStop Color="#FF8399A9" Offset="0.375"/>
						<GradientStop Color="#FF718597" Offset="0.375"/>
						<GradientStop Color="#FF617584" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="RadioButton">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="16"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BoxMiddleBackground"/>
											<ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BoxMiddleBackground"/>
											<ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#EAFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#F4FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
											<ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
											<DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CheckStates">
									<VisualState x:Name="Checked">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unchecked"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentFocusVisualElement"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unfocused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="Valid"/>
									<VisualState x:Name="InvalidUnfocused">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="InvalidFocused">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<System:Boolean>True</System:Boolean>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid VerticalAlignment="Center" Margin="0" d:LayoutOverrides="Width" HorizontalAlignment="Center">
								<Ellipse x:Name="Background" Fill="#FFFFFFFF" Height="14" Margin="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Width="14"/>
								<Ellipse x:Name="BackgroundOverlay" Fill="#FFC4DBEE" Height="14" Margin="1" Opacity="0" Stroke="#00000000" StrokeThickness="1" Width="14"/>
								<Ellipse x:Name="BoxMiddleBackground" Fill="{TemplateBinding Background}" Height="10" Stroke="#00000000" StrokeThickness="1" Width="10" Margin="3"/>
								<Ellipse x:Name="BoxMiddle" Height="10" StrokeThickness="1" Width="10" Margin="3">
									<Ellipse.Fill>
										<LinearGradientBrush EndPoint="0.64,0.88" StartPoint="0.62,0.15">
											<GradientStop Color="#FFFFFFFF" Offset="0.013"/>
											<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
											<GradientStop Color="#EAFFFFFF" Offset="0.603"/>
											<GradientStop Color="#D8FFFFFF" Offset="1"/>
										</LinearGradientBrush>
									</Ellipse.Fill>
									<Ellipse.Stroke>
										<LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
											<GradientStop Color="#FFFFFFFF" Offset="1"/>
											<GradientStop Color="#FFFFFFFF" Offset="0"/>
											<GradientStop Color="#FFFFFFFF" Offset="0.375"/>
											<GradientStop Color="#FFFFFFFF" Offset="0.375"/>
										</LinearGradientBrush>
									</Ellipse.Stroke>
								</Ellipse>
								<Ellipse x:Name="BoxMiddleLine" Height="10" Opacity=".2" Stroke="#FF333333" StrokeThickness="1" Width="10" Margin="3"/>
								<Ellipse x:Name="CheckIcon" Fill="#FF333333" Height="4" Opacity="0" Width="4" Margin="6"/>
								<Ellipse x:Name="DisabledVisualElement" Fill="#FFFFFFFF" Height="14" Opacity="0" Width="14" Margin="1"/>
								<Ellipse x:Name="ContentFocusVisualElement" Height="16" IsHitTestVisible="false" Opacity="0" Stroke="#FF6DBDD1" StrokeThickness="1" Width="16"/>
								<Grid x:Name="ValidationErrorElement" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
									<ToolTipService.ToolTip>
										<ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
											<ToolTip.Triggers>
												<EventTrigger RoutedEvent="Canvas.Loaded">
													<BeginStoryboard>
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<System:Boolean>true</System:Boolean>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
													</BeginStoryboard>
												</EventTrigger>
											</ToolTip.Triggers>
										</ToolTip>
									</ToolTipService.ToolTip>
									<Ellipse Height="14" Stroke="#FFDB000C" StrokeThickness="1" Width="14"/>
									<Ellipse Fill="#FFDB000C" HorizontalAlignment="Right" Height="4" Margin="0,-2,-1,0" VerticalAlignment="Top" Width="4"/>
									<Ellipse Fill="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-5,-4,0" VerticalAlignment="Top" Width="10"/>
								</Grid>
							</Grid>
							<Grid x:Name="grid" Grid.Column="1" Margin="4,1,18,0" Background="{x:Null}">
								<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="GridBox" Height="21" Margin="0,1,0,0"/>
							</Grid>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

      

    </UserControl.Resources>

    <toolkit:ShinyBlueTheme>

		<Grid x:Name="LayoutRoot" Background="White">
			<ListBox x:Name="listBox1" SizeChanged="listBox1_SizeChanged" Margin="0,77,0,0" ItemsPanel="{StaticResource NormalPanelTemplate}" ItemTemplate="{StaticResource NormalDataTemplate}" HorizontalContentAlignment="Left" SelectionMode="Multiple" />
			<Grid Height="71" Margin="6,0,2,0" VerticalAlignment="Top">
				<Grid.Background>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#FFD9E0E0" Offset="0"/>
						<GradientStop Color="#FFB2D2EF" Offset="0.23"/>
						<GradientStop Color="#FF121111" Offset="0.987"/>
						<GradientStop Color="#FFB2D2EF" Offset="0.9"/>
					</LinearGradientBrush>
				</Grid.Background>
				<TextBlock HorizontalAlignment="Left" Margin="0,8,0,0" x:Name="textBlock1" Text="RCP:" Width="44" FontSize="14" Height="25" VerticalAlignment="Top" />
				<TextBox HorizontalAlignment="Left" Margin="50,8,0,0" x:Name="txtRCP" Width="79" TextChanged="txtRCP_TextChanged" Height="30" VerticalAlignment="Top" />
				<RadioButton Content="All" HorizontalAlignment="Left" Margin="258,8,0,33" x:Name="rdoAll" Width="86" IsChecked="True" GroupName="Group" Checked="radioButton5_Checked" FontSize="14" Style="{StaticResource RadioButtonStyle1}" />
				<RadioButton Content="Product" HorizontalAlignment="Left" IsChecked="False" Margin="307,8,0,0" x:Name="rdoProduct" Width="96" GroupName="Group" Checked="radioButton5_Checked" FontSize="14" Style="{StaticResource RadioButtonStyle1}" Height="30" VerticalAlignment="Top" />
				<RadioButton Content="Idle" IsChecked="False" Margin="389,8,0,0" x:Name="rdoIdle" GroupName="Group" Checked="radioButton5_Checked" FontSize="14" Style="{StaticResource RadioButtonStyle1}" HorizontalAlignment="Left" Width="81" Height="30" VerticalAlignment="Top" />
				<RadioButton Content="Verify" HorizontalAlignment="Left" IsChecked="False" Margin="447,8,0,0" x:Name="rdoVerify" Width="99" GroupName="Group" Checked="radioButton5_Checked" FontSize="14" RenderTransformOrigin="0.868,0.667" Style="{StaticResource RadioButtonStyle1}" Height="26" VerticalAlignment="Top" />
				<RadioButton Content="Lem" HorizontalAlignment="Left" IsChecked="False" Margin="516,8,0,0" x:Name="rdoLem" Width="79" GroupName="Group" Checked="radioButton5_Checked" FontSize="14" Style="{StaticResource RadioButtonStyle1}" Height="26" VerticalAlignment="Top" />
				<RadioButton Content="Warning" GroupName="Group" HorizontalAlignment="Left" IsChecked="False" Margin="577,8,0,0" x:Name="rdoWarning" Width="101"  Checked="radioButton5_Checked" FontSize="14" Style="{StaticResource RadioButtonStyle1}" Height="26" VerticalAlignment="Top" />
				<CheckBox Content="Detail" FontSize="14" Height="26" HorizontalAlignment="Left" Margin="259,39,0,0" x:Name="checkBox1" VerticalAlignment="Top" Width="73" Checked="checkBox1_Checked" Unchecked="checkBox1_Unchecked" />
                <TextBlock FontSize="14" HorizontalAlignment="Left" Margin="135,9,0,24" Name="tbtArea" Text="Area:" Width="39" />
                <TextBox Height="31" Margin="180,7,0,0" Name="txtArea" VerticalAlignment="Top" HorizontalAlignment="Left" Width="71" TextChanged="txtArea_TextChanged" />
                <RadioButton Content="Down" FontSize="14" GroupName="Group" Height="26" HorizontalAlignment="Left" IsChecked="False" Margin="670,9,0,0" Name="rdDown" Style="{StaticResource RadioButtonStyle1}" VerticalAlignment="Top" Width="81" Checked="rdDown_Checked" />
                <Button Content="SendMessage" Height="24" HorizontalAlignment="Left" Margin="338,39,0,0" Name="button1" VerticalAlignment="Top" Width="100" Click="button1_Click_1" />
                <Button Content="SendAllMessage" Height="24" HorizontalAlignment="Left" Margin="446,39,0,0" Name="button2" VerticalAlignment="Top" Width="100" Click="button2_Click" />
                <RadioButton Content="Pending" FontSize="14" GroupName="Group" Height="26" HorizontalAlignment="Left" IsChecked="False" Margin="739,7,0,0" Name="rdPending" Style="{StaticResource RadioButtonStyle1}" VerticalAlignment="Top" Width="103" Checked="rdDown_Checked" />
            </Grid>
			<sdk:DataGrid AutoGenerateColumns="false" IsReadOnly="True"  FontSize="14" Visibility="Collapsed" HorizontalAlignment="Stretch" Margin="0,77,0,0" x:Name="dataGrid1" ColumnWidth="Auto" FrozenColumnCount="2" ColumnHeaderHeight="50">
				<sdk:DataGrid.Columns>
					<sdk:DataGridTextColumn Binding="{Binding PcName}"  Header="RCP"   />
					<sdk:DataGridTextColumn Binding="{Binding Status}"  Header="Status"/>
					<sdk:DataGridTextColumn Binding="{Binding TimeRemain, Converter={StaticResource RemainTimeConverter}}"  Header="Remain Time"/>
					<sdk:DataGridTextColumn Binding="{Binding StatusContinueTime}"  Header="Status Time" />
					<sdk:DataGridTextColumn Binding="{Binding Progress, StringFormat=\{0:0.0000\}%}"  Header="Progress"/>
					<sdk:DataGridTextColumn Binding="{Binding CurrentWaferId}"  Header="CurrentWaferId"/>
					<sdk:DataGridTextColumn Binding="{Binding WarningMessage}"  Header="WarningMessage"/>
                    <sdk:DataGridTextColumn Binding="{Binding WarningType,Converter={StaticResource ZeroToNAConverter}}"  Header="WarningType"/>
                    <sdk:DataGridTextColumn Binding="{Binding WarningBeginTime,Converter={StaticResource StandardTimeConveter}}"  Header="WarningBeginTime"/>
					<sdk:DataGridTextColumn Binding="{Binding lot_id}"  Header="lot_id"/>
					<sdk:DataGridTextColumn Binding="{Binding ProbeCardId}"  Header="ProbeCardId"/>
					<sdk:DataGridTextColumn Binding="{Binding total_num_wafer_string}"  Header="total_num_wafer"/>
					<sdk:DataGridTextColumn Binding="{Binding tested_num_wafer_string}"  Header="tested_num_wafer"/>
					<sdk:DataGridTextColumn Binding="{Binding total_num_chip_string}"  Header="total_num_chip"/>
					<sdk:DataGridTextColumn Binding="{Binding tested_num_chip_string}"  Header="tested_num_chip"/>
                    <sdk:DataGridTextColumn Binding="{Binding eq_comment}"  Header="eq_comment"/>
                    <sdk:DataGridTextColumn Binding="{Binding eq_area}"  Header="eq_area"/>
                    <sdk:DataGridTextColumn Binding="{Binding eq_type}"  Header="eq_type"/>
                    <sdk:DataGridTextColumn Binding="{Binding eq_prober}"  Header="eq_prober"/>
                    <sdk:DataGridTextColumn Binding="{Binding yield,Converter={StaticResource YieldToStringConverter}}"   Header="yield"/>
                </sdk:DataGrid.Columns>
			</sdk:DataGrid>
        </Grid>
	</toolkit:ShinyBlueTheme>
</UserControl>
